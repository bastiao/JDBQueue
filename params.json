{"name":"JDBQueue","tagline":"Java Persistence Queue","body":"# Introduction #\r\n\r\nThe basic idea of JDBQueue is to have a persistence Queue. Then, if the program need to restart, the queue is restored.\r\nWe use a database because serialize a Queue objet is not faster, for each insertion.\r\n\r\nThis messages in the queue has 2 states:\r\n- PENDING: It waits for a worker poll the message. \r\n- PROGRESS: A worker is trying to work on the message. \r\n\r\nThere is a third-party state, that it is when the message are handled and it is \r\ncompleted. The work do completeTask and the message are removed from the \r\nDBQueue (persistence queue). \r\n\r\n![http://luisbastiao.files.wordpress.com/2012/09/arch.png](http://luisbastiao.files.wordpress.com/2012/09/arch.png)\r\n\r\n# Example 1 #\r\n\r\nIn order to handle the message an implementation of ITask should be provided.\r\nMoreover, to poll the messages automatically, a JDBWorker need to be created.\r\n\r\n\r\n    DBQueue q = new DBQueue(\"queue.db\");\r\n    JDBWorker worker = new JDBWorker(q,new TestTask());\r\n    worker.start();\r\n\r\n    q.add(\"Test\");\r\n    q.add(\"Test2\");\r\n    q.poll();\r\n    q.take();\r\n\r\n    worker.join();\r\n\r\n# Example 2 # \r\n\r\n    class TestTask implements ITask\r\n    {\r\n        private DBQueue queue; \r\n        public TestTask(DBQueue queue )\r\n        {\r\n            this.queue = queue;\r\n        }\r\n        public void handlerMessage(MessageObj message) {\r\n            \r\n            System.out.println(message);\r\n            queue.completedTask(message.getId());\r\n            \r\n        }\r\n    \r\n    }\r\n    public void workerTest()\r\n    {\r\n    \r\n        DBQueue q = new DBQueue(\"queue.db\");\r\n        \r\n        \r\n        JDBWorker worker = new JDBWorker(q,new TestTask(q), 500);\r\n        worker.start();\r\n        \r\n        for (int i = 0 ; i<10 ; i++)\r\n        {\r\n            q.add(\"je1\");\r\n            q.add(\"je2\");\r\n            q.add(\"je3\");\r\n            System.out.println(\"Size: \" + q.size());\r\n            System.out.println(\"Size of pending \" + q.sizePending());\r\n            System.out.println(\"Size of progress \" +q.sizeProgress());\r\n            q.add(\"je4\");\r\n            q.add(\"je5\");\r\n            \r\n        }\r\n        while(q.size()>0)\r\n        {\r\n             System.out.println(\"Size: \" + q.size());\r\n            System.out.println(\"Size of pending \" + q.sizePending());\r\n            System.out.println(\"Size of progress \" +q.sizeProgress());\r\n            try {\r\n                Thread.sleep(100);\r\n            } catch (InterruptedException ex) {\r\n                Logger.getLogger(WorkerTest.class.getName()).log(Level.SEVERE, null, ex);\r\n            }\r\n        }\r\n        System.out.println(\"Closing? \" + q.size());\r\n        worker.close();\r\n        try {\r\n            worker.join();\r\n        } catch (InterruptedException ex) {\r\n            Logger.getLogger(WorkerTest.class.getName()).log(Level.SEVERE, null, ex);\r\n        }\r\n        \r\n    }\r\n}\r\n\r\n\r\n# Dependence #\r\n\r\nIn order to grant the persistence, JDBQueue uses sqlite4java.\r\n\r\n# Notes #\r\n\r\nThis work is still working in progress and used by a project. Generalization might be necessary to other cases. Feel free to contribute back to it.\r\n\r\n# Author #\r\n\r\n\r\nLuís A. Bastião Silva <luis.kop@gmail.com>\r\n\r\n\r\n\r\n# Licence #\r\n\r\nCopyright   2012 - Luís A. Bastião Silva\r\n\r\nJDBQueue is free software: you can redistribute it and/or modify\r\nit under the terms of the GNU General Public License as published by\r\nthe Free Software Foundation, either version 3 of the License, or\r\n(at your option) any later version.\r\n\r\nJDBQueue is distributed in the hope that it will be useful,\r\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\r\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\r\nGNU General Public License for more details.\r\n\r\nYou should have received a copy of the GNU General Public License\r\nalong with JDBQueue.  If not, see <http://www.gnu.org/licenses/>.\r\n","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}